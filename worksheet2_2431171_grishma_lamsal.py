# -*- coding: utf-8 -*-
"""worksheet2_2431171_grishma_lamsal.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16Lu2mKGVLa3PWwpWU2uHfGhIVrbQLSb4

3.1 Warming Up Exercises - Basic Inspection and Exploration:
Problem 1 - Data Read, Write and Inspect:
Complete all following Task:
• Dataset for the Task: "bank.csv"
1. Load the provided dataset and import in pandas DataFrame.
2. Check info of the DataFrame and identify following:
(a) columns with dtypes=object
(b) unique values of those columns.
(c) check for the total number of null values in each column.
3. Drop all the columns with dtypes object and store in new DataFrame, also write the DataFrame in
”.csv” with name ”banknumericdata.csv”
4. Read ”banknumericdata.csv” and Find the summary statistics.

/content/drive/MyDrive/data/bank .csv
/content/drive/MyDrive/data/data.csv
/content/drive/MyDrive/data/Titanic-Dataset.csv
/content/drive/MyDrive/data/medical_students_dataset.csv
"""

import pandas as pd

#1
df = pd.read_csv('/content/drive/MyDrive/data/bank .csv')

df.head()
#2

df.info()
df.describe()
#3
df = pd.read_csv("/content/drive/MyDrive/data/bank .csv")

new_df = df.select_dtypes(exclude=['object'])

output_file_path = "banknumericdata.csv"
new_df.to_csv(output_file_path, index=False)

print(f"New data saved to '{output_file_path}'.")
print("\nPreview of the new DataFrame:")
print(new_df.head())
#4
new_df = pd.read_csv('banknumericdata.csv')
print("Static summary")
print(new_df.describe())

"""Problem 2 - Data Imputations:
Complete all the following Task:
• Dataset for the Task: "medical_student.csv"
1. Load the provided dataset and import in pandas DataFrame.
2. Check info of the DataFrame and identify column with missing (null) values.
3. For the column with missing values fill the values using various techniques we discussed above. Try
to explain why did you select the particular methods for particular column.
4. Check for any duplicate values present in Dataset and do necessary to manage the duplicate items.
{Hint: dataset.duplicated.sum()}
"""

#1
medical_df = pd.read_csv("/content/drive/MyDrive/data/medical_students_dataset.csv")
print(medical_df.info())
#2
print(df.info())

print("\nColumns with Missing (Null) Values:")
missing_values = df.isnull().sum()
print(missing_values[missing_values > 0])
#3

if 'Age' in df.columns:
    df['Age'].fillna(df['Age'].median(), inplace=True)
    print("Missing values in 'Age' filled with the median.")

if 'Marks' in df.columns:
    df['Marks'].fillna(df['Marks'].mean(), inplace=True)
    print("Missing values in 'Marks' filled with the mean.")

if 'City' in df.columns:
  df['City'].fillna("Unknown", inplace=True)
  print("Missing values in 'City' filled with 'Unknown'.")

print("\nMissing values after imputation:")
print(df.isnull().sum())
#4
print("Number of duplicate rows:", medical_df.duplicated().sum())
medical_df.drop_duplicates(inplace=True)

"""3.2 Exercises - Data Cleaning and Transformations with ”Titanic Dataset”:
Dataset Used: "titanic.csv"
Problem - 1:
Create a DataFrame that is subsetted for the columns ’Name’, ’Pclass’, ’Sex’, ’Age’, ’Fare’, and ’Survived’.
Retain only those rows where ’Pclass’ is equal to 1, representing first-class passengers. What is the mean,
median, maximum value, and minimum value of the ’Fare’ column?
"""

df = pd.read_csv('/content/drive/MyDrive/data/Titanic-Dataset.csv')

subset_df = df[['Name', 'Pclass', 'Sex', 'Age', 'Fare', 'Survived']]

first_class_df = subset_df[subset_df['Pclass'] == 1]

mean_fare = first_class_df['Fare'].mean()
median_fare = first_class_df['Fare'].median()
max_fare = first_class_df['Fare'].max()
min_fare = first_class_df['Fare'].min()

print("Statistics for the 'Fare' column (First-Class Passengers):")
print(f"Mean Fare: {mean_fare}")
print(f"Median Fare: {median_fare}")
print(f"Maximum Fare: {max_fare}")
print(f"Minimum Fare: {min_fare}")

"""Problem - 2:
How many null values are contained in the ’Age’ column in your subsetted DataFrame? Once you’ve found
this out, drop them from your DataFrame.
"""

null_age_count = first_class_df['Age'].isnull().sum()
print(f"Num of null values in 'Age' column is: {null_age_count}")

first_class_df_cleaned = first_class_df.dropna(subset=['Age'])

print("\nNum of null values in 'Age' after dropping is:")
print(first_class_df_cleaned['Age'].isnull().sum())

"""Problem - 3:

The ’Embarked’ column in the Titanic dataset contains categorical data representing the ports of embarka-
tion:

• ’C’ for Cherbourg
• ’Q’ for Queenstown
• ’S’ for Southampton
Task:
1. Use one-hot encoding to convert the ’Embarked’ column into separate binary columns (’Embarked C’,
’Embarked Q’, ’Embarked S’).
2. Add these new columns to the original DataFrame.
3. Drop the original ’Embarked’ column.
4. Print the first few rows of the modified DataFrame to verify the changes.
"""

embarked_encoded = pd.get_dummies(df['Embarked'], prefix='Embarked')

df = pd.concat([df, embarked_encoded], axis=1)
df.drop(columns=['Embarked'], inplace=True)

print(df.head())

"""Problem - 4:

Compare the mean survival rates (’Survived’) for the different groups in the ’Sex’ column. Draw a visual-
ization to show how the survival distributions vary by gender.
"""

import matplotlib.pyplot as plt
import seaborn as sns

mean_survival_rate_by_gender = df.groupby('Sex')['Survived'].mean()
print("Mean Survival Rates by Gender:")
print(mean_survival_rate_by_gender)

plt.figure(figsize=(8, 6))
sns.histplot(data=df, x='Survived', hue='Sex', multiple='stack', kde=True)

plt.title('Survival Distribution by Gender')
plt.xlabel('Survived (0 = No, 1 = Yes)')
plt.ylabel('Count')
plt.legend(title='Gender', labels=['Male', 'Female'])

plt.show()

"""Problem - 5:

Draw a visualization that breaks your visualization from Exercise 3 down by the port of embarkation (’Em-
barked’). In this instance, compare the ports ’C’ (Cherbourg), ’Q’ (Queenstown), and ’S’ (Southampton).
"""

print(df.columns)



plt.figure(figsize=(10, 6))
sns.histplot(data=df, x='Survived', hue='Embarked', multiple='stack', kde=True,
             hue_order=['C', 'Q', 'S'], discrete=True)

plt.title('Survival Distribution by Port of Embarkation')
plt.xlabel('Survived (0 = No, 1 = Yes)')
plt.ylabel('Count')
plt.legend(title='Port of Embarkation', labels=['Cherbourg', 'Queenstown', 'Southampton'])

plt.show()

"""Problem - 6{Optional}:
Show how the survival rates (’Survived’) vary by age group and passenger class (’Pclass’). Break up the
’Age’ column into five quantiles in your DataFrame, and then compare the means of ’Survived’ by class
and age group. Draw a visualization using a any plotting library to represent this graphically.
"""

import seaborn as sns
import matplotlib.pyplot as plt

file_path = 'titanic.csv'
df = pd.read_csv('/content/drive/MyDrive/data/Titanic-Dataset.csv')

df['AgeGroup'] = pd.qcut(df['Age'], 5, labels=['Q1', 'Q2', 'Q3', 'Q4', 'Q5'])

survival_by_class_age = df.groupby(['Pclass', 'AgeGroup'])['Survived'].mean().reset_index()

pivot_data = survival_by_class_age.pivot(index='Pclass', columns='AgeGroup', values='Survived')

# Step 4: Plot the data using seaborn heatmap
plt.figure(figsize=(10, 6))
sns.heatmap(pivot_data, annot=True, cmap='coolwarm', fmt='.2f', cbar_kws={'label': 'Survival Rate'})
plt.title('Survival Rate by Age Group and Passenger Class')
plt.ylabel('Passenger Class')
plt.xlabel('Age Group')
plt.show()